#!/usr/bin/env python
import roslib; roslib.load_manifest('clopema_gripper')
import rospy
import sys
import numpy as np
from clopema_gripper.srv import SkinRead
from clopema_gripper.srv import OpticalClassification
from clopema_gripper.msg import SkinData
from std_msgs.msg import String
from std_msgs.msg import Bool

def getDataGripper1(srv):
    rospy.wait_for_service('/clopema_gripper/SkinDataSporadic')
    try:
        proxy = rospy.ServiceProxy('/clopema_gripper/SkinDataSporadic', SkinRead)
        
        print proxy().d.sensor_responses
        
        mean_value = 0;
        for i in xrange(16,32):
            mean_value = mean_value + proxy().d.sensor_responses[i]
            print proxy().d.sensor_responses[i]
       
        mean_value = mean_value / 16
        print "mean value of R1 is:"
        print mean_value    
        
        if mean_value > 5400 and mean_value < 5500:
            return False 
        else:       
            return True
            
    except rospy.ServiceException, e:
        print "Service call failed: %s"%e
        
def getDataGripper2(srv):
    rospy.wait_for_service('/clopema_gripper/SkinDataSporadic')
    try:
        proxy = rospy.ServiceProxy('/clopema_gripper/SkinDataSporadic', SkinRead)
        
        print proxy().d.sensor_responses
        
        mean_value = 0;
        for i in xrange(0,16):
            mean_value = mean_value + proxy().d.sensor_responses[i]
            print proxy().d.sensor_responses[i]
        
        mean_value = mean_value / 16  
        print "mean value of R2 is:"
        print mean_value  
        
        if mean_value > 6780 and mean_value < 7350:
            return False
        else:       
            return True
            
    except rospy.ServiceException, e:
        print "Service call failed: %s"%e

if __name__ == '__main__':
    rospy.init_node('gripper_holding')
    s = rospy.Service('r1_gripper/is_holding',OpticalClassification, getDataGripper1)
    s = rospy.Service('r2_gripper/is_holding',OpticalClassification, getDataGripper2)
    rospy.spin()
